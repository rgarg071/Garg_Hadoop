#!/bin/bash

rm -f SQLFile.txt
rm -f SQLFile_temp.txt
echo "Enter the table name"
read table_nm
pk_line=''
tbl_numb=`cat Runnumb.txt`
echo "WITH ADJ_"$tbl_numb" AS" >> SQLFile.txt
echo "(SELECT * FROM (SELECT" >> SQLFile.txt

echo "Do you want to enter the primary keys through file: If so enter "Yes" or "Y": Else press any other alphabet"
read response1
a=`echo $response1 | tr 'a-z' 'A-Z'`
if [ $a == "YES" ] || [ $a == "Y" ]
then
    echo "Please enter the file name containing primary keys"
    read key_file
    var1=$key_file
    cp $key_file pkfile.txt
else
    schema=`echo $ADW_USER | rev | cut -c 4- | rev`
    echo "SELECT B.COLUMN_NAME FROM (DBA_CONSTRAINTS A INNER JOIN DBA_CONS_COLUMNS B ON A.TABLE_NAME = B.TABLE_NAME AND A.CONSTRAINT_NAME = B.CONSTRAINT_NAME AND A.OWNER = B.OWNER AND A.TABLE_NAME = '$table_nm' AND A.CONSTRAINT_TYPE = 'U' AND A.OWNER = '$schema')"
    m_db unload $DBC_COMMON_DB/adw.dbc -select "SELECT B.COLUMN_NAME FROM (DBA_CONSTRAINTS A INNER JOIN DBA_CONS_COLUMNS B ON A.TABLE_NAME = B.TABLE_NAME AND A.CONSTRAINT_NAME = B.CONSTRAINT_NAME AND A.OWNER = B.OWNER AND A.TABLE_NAME = '$table_nm' AND A.CONSTRAINT_TYPE = 'U' AND A.OWNER = '$schema')"|sed 's/^A//g' > pkfile.txt
fi

echo "Do you want to enter the column names through a file: If so press enter "Yes" or "Y": Else press any other alphabet"
read response2
b=`echo $response2 | tr 'a-z' 'A-Z'`
if [ $b == "YES" ] || [ $b == "Y" ]
then
    echo "Please enter the file name containing the column details"
    read col_file
    cp $col_file colfile.txt
    echo "Check column details in colfile.txt"
else
    echo "select column_name,DATA_TYPE,(CASE WHEN DATA_TYPE LIKE '%NUMBER%' THEN 'ADDITIVE_FIELD' ELSE 'NON_ADDITIVE' end) as FIELD_DEF from all_tab_columns where table_name = '$table_nm'"
    m_db unload $DBC_COMMON_DB/adw.dbc -column_delimiter "|" -select "select column_name,DATA_TYPE,(CASE WHEN DATA_TYPE LIKE '%NUMBER%' THEN 'ADDITIVE_FIELD' ELSE 'NON_ADDITIVE' end) as FIELD_DEF from all_tab_columns where table_name = '$table_nm'" > colfile.txt
fi

sed -i '/ALLBRIDGE/d' pkfile.txt
echo "Here are your primary keys"
while read line ; do
 pk_line="$pk_line",$line
done < pkfile.txt
pk_ln=`echo $pk_line|sed 's/^,//'`
echo $pk_ln

orderfld=`cat colfile.txt|grep ALLBRIDGE_PROCESS_TS|awk -F'|' '{print $1}'`
while read line ; do
 var1=`echo $line|awk -F'|' '{print $3}'`
 var2=`echo $line|awk -F'|' '{print $1}'`
 var3=`cat pkfile.txt|grep $var2`
 if [ "$var1" == "NON_ADDITIVE" ] || [ -n "$var3" ]; then
  echo "$var2 ," >> SQLFile.txt
  #echo "(CASE WHEN $var2 IS NULL THEN (LEAD("$var2",1) OVER (PARTITION BY $pk_ln ORDER BY $orderfld DESC)) ELSE $var2 END) AS $var2 ," >> SQLFile.txt
  echo "NVL(ADJ_"$tbl_numb"."$var2",BASE_"$tbl_numb"."$var2") $var2 ," >> SQLFile_temp.txt
 else
  echo "SUM("$var2") OVER (PARTITION BY "$pk_ln") AS $var2 ," >> SQLFile.txt
  echo "(CASE WHEN ADJ_"$tbl_numb"."$var2" IS NULL THEN BASE_"$tbl_numb"."$var2" ELSE (CASE WHEN BASE_"$tbl_numb"."$var2" IS NULL THEN ADJ_"$tbl_numb"."$var2" ELSE (BASE_"$tbl_numb"."$var2" + ADJ_"$tbl_numb"."$var2") END) END) AS $var2 ," >> SQLFile_temp.txt
 fi
done < colfile.txt
echo "ROW_NUMBER() OVER (PARTITION BY $pk_ln ORDER BY $orderfld DESC) AS ROWNM" >> SQLFile.txt
echo "FROM "$table_nm"_ADJ) WHERE ROWNM=1)," >> SQLFile.txt
#sed -i '$ s/.$//' SQLFile.txt
echo "BASE_"$tbl_numb" AS (" >> SQLFile.txt
echo "SELECT * FROM "$table_nm")," >> SQLFile.txt
echo "COMBINED AS(" >> SQLFile.txt
echo "SELECT" >> SQLFile.txt
sed -i '$ s/.$//' SQLFile_temp.txt
cat SQLFile_temp.txt >> SQLFile.txt
echo "FROM BASE_"$tbl_numb" FULL OUTER JOIN ADJ_"$tbl_numb"" >> SQLFile.txt
echo "ON" >> SQLFile.txt
while read line ; do
 echo "BASE_"$tbl_numb"."$line" = ADJ_"$tbl_numb"."$line" AND" >> SQLFile.txt
done < pkfile.txt
sed -i '$ s/...$//' SQLFile.txt
echo ")" >> SQLFile.txt
echo "Select * from COMBINED" >> SQLFile.txt
tbl_numb=`expr $tbl_numb + 1`
echo "$tbl_numb" > Runnumb.txt
echo "The file containg the SQL query has been sent on your email"
user_id=`logname`
echo ""|mailx -s "Query" -a SQLFile.txt $user_id@allstate.com
